;      |        |       |
;      |  .  .  |   .   |   .
;      m  a  l  w   a   r   e
;
;    designed for 286 12.5 MHz
;    run in DosBox 3000 cycles
;
;       calamity 256 vol.1
;            |      |
;        zden satori 2016

.model tiny
.code
.286
     org 100h
start:

     mov al, 13h
     int 10h
     push 0a000h
     pop es

	mov si, offset pal_data
	mov bx, 0004h
pal_l:
	mov cx, 64
pal:
	mov dx, 03c8h
	mov al, bh
	out dx, al
	inc dx

	mov al, cl
	and al, [si]
	out dx, al

	mov al, cl
	and al, [si+1]
	out dx, al

	mov al, cl
	and al, [si+2]
	out dx, al
	inc bh
	loop pal
	add si, 3
	dec bl
	jnz pal_l

; --- snd
	mov al, 10110110b
	out 43h, al
; ---
	mov si, 32000

	in al, 61h
	or al, 11b
	out 61h, al

frame_loop:

timer:

	xor ah,ah
	int 1ah
	mov bx, 1234h
mem_label:
	sub bx, dx
	cmp bx, 1
	jb timer
	mov word ptr[mem_label-2],dx
;---------
	call _rnd

	xchg ax, bx

	out 42h, al
	xchg al, ah
	out 42h, al

	mov cx, si
l1:
	mov ax,  bx

	and bl, 127
	mov ax, si
	xchg al,ah
	shr al,3

	or bl,al


	mov [es:di], bl
	mov [es:di+4], bl
	inc bl

	add di, bx

	loop l1

	mov cx, di
	shr cx, 1
	mov dx, cx
l2:
	xor byte ptr [es:di], 128
	mov byte ptr [es:si+32000], 0
	inc di
	inc si


	loop l2

	mov cx, dx
	mov ax, dx
l3:
	xor byte ptr [es:di], al
	inc di
	loop l3

	call pix_do

l7:
noo:

	xor ax, ax
	; ESC check
	in al, 60h
	dec ax 

	jnz short frame_loop
	
	in al, 61h
	and al, 11111100b
	out 61h, al


	mov al, 3h
	int 10h

	ret

_rnd:
; ------------------ random
	mov     al,16
r_loop: rol     bp,1
	jnc     r_skip
	xor     bp,0ah

r_skip: dec     al
	jne     r_loop
        mov     bx,bp
	ret
; -----------------------------

pix_do:
	push si
	mov si, offset pix
	mov dh, 10
pix_rows:
	mov bl, 24
pix_row_rep:
	mov dl, 8
	mov ah, [si]
pix_more:
	shl ah, 1
	jc pix_write
	add di, 24
	jmp pix_skip
pix_write:
	cld
	mov cx, 24
	rep stosb
pix_skip:
	dec dl
	jnz pix_more
	add di, 320-(24*8)
	dec bl
	jnz pix_row_rep

	inc si
	dec dh
	jnz pix_rows

	pop si

	ret
pal_data:	db 63,47,0, 63,63,63, 63,15,0, 63,31,00
pix		db 00111110b
		db 01111111b
		db 01001001b
		db 01111111b
		db 01110111b
		db 00111110b
		db 00101010b
		db 'Z'

	end start